import { ComponentType, ReactElement } from 'react';
import { ModelProps, PageModel } from '../types/AEMModel';
import { ComponentMapping } from '../core/ComponentMapping';
import { Config, MappedComponentProperties } from '../types/EditConfig';
export type ContainerProps = {
    className?: string;
    itemPath?: string;
    isPage?: boolean;
    childPages?: JSX.Element;
    getItemClassNames?: (_key: string) => string;
    placeholderClassNames?: string;
    isInEditor?: boolean;
    componentMapping?: typeof ComponentMapping;
    removeDefaultStyles?: boolean;
    config?: Config<MappedComponentProperties>;
    components?: {
        [key: string]: ComponentType<MappedComponentProperties>;
    };
    model?: PageModel;
} & ModelProps;
/**
 * Retrieves the child components from the container.
 * @summary Retrieves the child components from the cqItems and cqItemsOrder for use in custom containers like Tabs, Carousel, Accordion, etc.
 * @param {ContainerProps} props
 * @returns {JSX.Element} Array of child components ready to be rendered
 */
export declare const getChildComponents: ({ cqItemsOrder, cqItems, cqPath, getItemClassNames, isPage, removeDefaultStyles, isInEditor, ...props }: ContainerProps) => ReactElement[];
export declare const Container: (props: ContainerProps) => JSX.Element;
